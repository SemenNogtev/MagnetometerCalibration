%% Калибровка магнитометра
% Калибровка магнитометра методом эллипсоидной подгонки
% Представлены 2 способа калибровки магнитометра методом эллипсоидной
% подгонки. Оба метода имеют одинаковый первый этап: поиск параметров
% эллипсоида. Коррекция эллипсоида в сферу происходит по разному. В первом
% методе смещение и матрица поворота определяются на основе интегральной (обобщенной)
% модели погрешностей и разложения Шолески. Во втором методе - на основе нахождения собственных
% значений и собственных векторов эллипсоида.
 
%% Эллипсоидная подгонка 1
x = xyz(:,1); y = xyz(:,2); z = xyz(:,3); % данные
[b,cM1,v1]=ellipsoid_fit([x y z]);        % эллипсоидная подгонка 1
xc=x-b(1); yc=y-b(2); zc=z-b(3);          % смещение центра в 0
xyzc=[xc,yc,zc]*cM1';                     % матрица коррекции
refr = 1;                                 % характерный радиус сферы
xc=xyzc(:,1)*refr;                        % масштабирование сферы
yc=xyzc(:,2)*refr;  
zc=xyzc(:,3)*refr;

% Графики
figure();
%plot3(x,y,z,'o'); grid on; hold on
plot3(xc,yc,zc,'go'); grid on; hold off
axis equal

% figure();
% plot3(x,y,z,'o'); hold on; grid on;
% [X, Y, Z] = meshgrid(-500:5:500, -500:5:500, -500:5:500);
% isosurface(X, Y, Z, v1(1)*X.^2 + v1(2)*Y.^2 + v1(3)*Z.^2 + 2*v1(4)*X.*Y + 2*v1(5)*X.*Z + 2*v1(6)*Y.*Z + 2*v1(7)*X + 2*v1(8)*Y + 2*v1(9)*Z, 1)

%% Эллипсоидная подгонка 2
x = xyz(:,1); y = xyz(:,2); z = xyz(:,3);   % данные
[ofs,gain,rotM,v2]=ellipsoid_fit2([x y z]); % эллипсоидная подгонка 1
xc2=x-ofs(1); yc2=y-ofs(2); zc2=z-ofs(3);   % смещение центра в 0
refr2 = 1;                                 % характерный радиус сферы
% Определение минимального поворота
% (диагональ матрицы поворота максимальная и положительная)
[m1,im1] = max(abs(rotM(1,:)));
[m2,im2] = max(abs(rotM(2,:)));
[m3,im3] = max(abs(rotM(3,:)));
rotM2 = rotM;
if im1 == 2
    rotM2(:,1) = rotM(:,2);
    rotM2(:,2) = rotM(:,1);
elseif im1 == 3
    rotM2(:,1) = rotM(:,3);
    rotM2(:,3) = rotM(:,1);
end
rotM3 = rotM2;
if im2 == 3
    rotM3(:,2) = rotM2(:,3);
    rotM3(:,3) = rotM2(:,2);
end
if rotM3(1,1) < 0
    rotM3(:,1) = -rotM3(:,1);
end
if rotM3(2,2) < 0
    rotM3(:,2) = -rotM3(:,2);
end
if rotM3(3,3) < 0
    rotM3(:,3) = -rotM3(:,3);
end
%
xyzc2=[xc2,yc2,zc2]*rotM3;      % матрица поворота
xc2=xyzc2(:,1)/gain(im1)*refr2; % равенство осей + масштабирование сферы
yc2=xyzc2(:,2)/gain(im2)*refr2;  
zc2=xyzc2(:,3)/gain(im3)*refr2; 

% Графики
figure();
%plot3(x,y,z,'o'); grid on; hold on
plot3(xc2,yc2,zc2,'ro'); grid on; hold off
axis equal

% figure();
% plot3(x,y,z,'o'); hold on;
% [X, Y, Z] = meshgrid(-500:5:500, -500:5:500, -500:5:500);
% isosurface(X, Y, Z, v2(1)*X.^2 + v2(2)*Y.^2 + v2(3)*Z.^2 + 2*v2(4)*X.*Y + 2*v2(5)*X.*Z + 2*v2(6)*Y.*Z + 2*v2(7)*X + 2*v2(8)*Y + 2*v2(9)*Z, 1)

%% Проверка на одной точке: поворот вектора

% Находятся наиболее и наименее удаленные точки эллипсоида
maxD = 0; maxI = 1;
minD = 10000; minI = 1;
for i = 1:length(x)
    d = sqrt(x(i)^2+y(i)^2+z(i)^2);
    if d > maxD
        maxD = d;
        maxI = i;
    end
    if d < minD
        minD = d;
        minI = i;
    end
end
%
% Точки данных
p0 = [0 0 0];                    % точка центра (0,0,0)
p1 = [x(maxI) y(maxI) z(maxI)];  % наиболее удаленная точка (крайняя точка на большой полуоси эллипсоида)
p12 = [x(minI) y(minI) z(minI)]; % наименее удаленная точка (крайняя точка на малой полуоси эллипсоида)
% Точка 1 эллипсоидной подгонки 1
p2(1)=p1(1)-b(1); p2(2)=p1(2)-b(2); p2(3)=p1(3)-b(3); % смещение центра в 0
p2=[p2(1),p2(2),p2(3)]*cM1';                          % матрица коррекции
refr = 1;                                             % характерный радиус сферы
p2(1)=p2(1)*refr;                                     % масштабирование сферы
p2(2)=p2(2)*refr;  
p2(3)=p2(3)*refr;
% Точка 2 эллипсоидной подгонки 1
p22(1)=p12(1)-b(1); p22(2)=p12(2)-b(2); p22(3)=p12(3)-b(3); % смещение центра в 0
p22=[p22(1),p22(2),p22(3)]*cM1';                            % матрица коррекции
refr = 1;                                                   % характерный радиус сферы
p22(1)=p22(1)*refr;                                         % масштабирование сферы
p22(2)=p22(2)*refr;  
p22(3)=p22(3)*refr;
% Точка 1 эллипсоидной подгонки 2
p3(1)=p1(1)-ofs(1); p3(2)=p1(2)-ofs(2); p3(3)=p1(3)-ofs(3); % смещение центра в 0 
p3=[p3(1),p3(2),p3(3)]*rotM3;                               % матрица поворота
refr2 = 1;                                                  % характерный радиус сферы
p3(1)=p3(1)/gain(2)*refr2;                                  % равенство осей + масштабирование сферы
p3(2)=p3(2)/gain(3)*refr2;  
p3(3)=p3(3)/gain(1)*refr2;
% Точка 2 эллипсоидной подгонки 2
p32(1)=p12(1)-ofs(1); p32(2)=p12(2)-ofs(2); p32(3)=p12(3)-ofs(3); % смещение центра в 0 
p32=[p32(1),p32(2),p32(3)]*rotM3;                                 % матрица поворота
refr2 = 1;                                                        % характерный радиус сферы
p32(1)=p32(1)/gain(im1)*refr2;                                    % равенство осей + масштабирование сферы
p32(2)=p32(2)/gain(im2)*refr2;  
p32(3)=p32(3)/gain(im3)*refr2;

% Масштабирование точек данных для визуализации
p1 = [x(maxI) y(maxI) z(maxI)]/maxD;
p12 = [x(minI) y(minI) z(minI)]/maxD;

% Графики
plot3([p0(1) p1(1)],[p0(2) p1(2)],[p0(3) p1(3)],'b'); grid on; hold on % точки эллипсоида данных
plot3([p0(1) p12(1)],[p0(2) p12(2)],[p0(3) p12(3)],'b'); grid on; hold on
plot3([p0(1) p2(1)],[p0(2) p2(2)],[p0(3) p2(3)],'g'); grid on; hold on % точки эллипсоида 1
plot3([p0(1) p22(1)],[p0(2) p22(2)],[p0(3) p22(3)],'g'); grid on; hold on
plot3([p0(1) p3(1)],[p0(2) p3(2)],[p0(3) p3(3)],'r'); grid on; hold on % точки эллипсоида 2
plot3([p0(1) p32(1)],[p0(2) p32(2)],[p0(3) p32(3)],'r'); grid on; hold off
axis equal

%% Эллипсоид
[X, Y, Z] = meshgrid(-100:1:100, -100:1:100, -100:1:100);
a11 = 1/15^2; a22 = 1/10^2; a33 = 1/10^2; a12 = 0; a23 = 0; a13 = 0; a14 = 0; a24 = 0; a34 = 0; a44 = -1;
isosurface(X, Y, Z, a11*X.^2 + a22*Y.^2 + a33*Z.^2 + 2*a12*X.*Y + 2*a13*X.*Z + 2*a23*Y.*Z + 2*a14*X + 2*a24*Y + 2*a34*Z + a44, 0)
xlabel("x"); ylabel("y"); zlabel("z"); grid on
axis equal

%% Функции
function [b,cM1,v]=ellipsoid_fit(xyz) % Эллипсоидная подгонка 1
x=xyz(:,1); y=xyz(:,2); z=xyz(:,3);                            % данные
D=[x.*x,  y.*y,  z.*z, 2*x.*y, 2*x.*z, 2*y.*z, 2*x, 2*y, 2*z]; % матрица измерений
v = (D'*D)\(D'*ones(length(x),1)); % подгонка параметров эллипсоида к измерениям по методу наименьших квадратов
A = [ v(1) v(4) v(5); v(4) v(2) v(6); v(5) v(6) v(3)];         % матрица из параметров эллипсоида
b=-A\[v(7);v(8);v(9)];                                         % смещение центра эллипсоида
L11 = sqrt(A(1,1)); L21 = A(2,1)/L11; L31 = A(3,1)/L11;        % разложение Шолески
L22 = sqrt(A(2,2)-L21^2); L32 = (A(3,2)-L21*L31)/L22; L33 = sqrt(A(3,3)-L31^2-L32^2);
G = [L11 L21 L31; 0 L22 L32; 0 0 L33];                         % матрица коррекции                   
cM1 = G;                                                       % масштабирование сферы
xc=x(1)-b(1); yc=y(1)-b(2); zc=z(1)-b(3);
xyzc=[xc,yc,zc]*cM1';
cM1 = cM1/sqrt(xyzc(1)^2+xyzc(2)^2+xyzc(3)^2);
end

function [ofs,gain,rotM,v]=ellipsoid_fit2(xyz) % Эллипсоидная подгонка 2
x=xyz(:,1); y=xyz(:,2); z=xyz(:,3);                          % данные
D=[x.*x, y.*y, z.*z, 2*x.*y, 2*x.*z, 2*y.*z, 2*x, 2*y, 2*z]; % матрица измерений
v = (D'*D)\(D'*ones(length(x),1)); % подгонка параметров эллипсоида к измерениям по методу наименьших квадратов
A = [ v(1) v(4) v(5) v(7); v(4) v(2) v(6) v(8); v(5) v(6) v(3) v(9); v(7) v(8) v(9) -1 ]; % матрица из параметров эллипсоида
ofs=-A(1:3,1:3)\[v(7);v(8);v(9)];                            % смещение центра эллипсоида
Tmtx=eye(4); Tmtx(4,1:3)=ofs'; AT=Tmtx*A*Tmtx';              % смещение центра эллипсоида в (0,0,0) 
[rotM, ev]=eig(AT(1:3,1:3)/-AT(4,4)); % собственные вектора (поворот) и собственные значения (равенство осей) 
gain=sqrt(1./diag(ev));               % коэффициенты усиления - это радиус эллипсоида
end


